name: Cross-compatibility

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Pandana
      run: |
        pip install .
        pip install osmnet 'pytest<4.0'
    - name: Run unit tests
      run: |
        python setup.py test

  build-win:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Pandana
      run: |
        pip install .
    - name: Run demo
      run: |
        python examples/simple_example.py

# The Python 3.9 builds are separate because there's no py39 binary for
# PyTables yet through pip. When one shows up at this link, py39 can be added
# to the run matrices above. https://pypi.org/project/tables/#files 

  build-py39:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
    - name: Install Pandana
      run: |
        conda install pytables
        pip install .
    - name: Run unit tests
      if: matrix.os != 'windows-latest'
      run: |
        python setup.py test
    - name: Run demo
      if: matrix.os == 'windows-latest'
      run: |
        python examples/simple_example.py
